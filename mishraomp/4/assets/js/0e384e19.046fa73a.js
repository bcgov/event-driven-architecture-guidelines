"use strict";(self.webpackChunkevent_driven_architecture=self.webpackChunkevent_driven_architecture||[]).push([[9671],{7876:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>s,toc:()=>u});var i=n(5893),r=n(1151);const c={sidebar_position:1},a="Event Driven Architecture",s={id:"intro",title:"Event Driven Architecture",description:"",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/event-driven-architecture-guidelines/mishraomp/4/docs/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"What is Governance.",permalink:"/event-driven-architecture-guidelines/mishraomp/4/docs/Governance/what"}},o={},u=[];function v(e){const t={h1:"h1",mermaid:"mermaid",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"event-driven-architecture",children:"Event Driven Architecture"}),"\n",(0,i.jsx)(t.mermaid,{value:"sequenceDiagram\n    participant Client\n    participant Service1\n    participant EventQueue\n    participant Service2\n\n    Client->>Service1: Request\n    Service1->>EventQueue: Publish event\n    EventQueue->>Service2: Notify event\n    Service2->>Client: Response"})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(v,{...e})}):v(e)}}}]);